/* 
   Filename: 25-style.css 
   Purpose:
       - Add custom properties to the root selector:
           - button-display: inline-block
           - button-padding: 1.5rem 3rem
           - button-border: 0.2rem solid var(--color-primary)
           - button-color: color-black
           - button-text-decoration: none
           - button-font-size: font-size-large
           - button-hover-color: color-white
           - button-hover-text-decoration: none
           - button-hover-background: color-primary
       - Add these selectors after the selector for anchor links in active state:
           - Create the button class selector
               - Set display to the variable button-display
               - Add padding all around with the variable button-padding
               - Style the border with the variable button-border
               - Set font size to the variable button-font-size
               - Set foreground color to the variable button-color
               - Text decoration value to the variable button-text-decoration
           - Create the hover state of the button class selector
               - Set foreground color value to the variable button-hover-color
               - Text decoration value to the variable button-hover-text-decoration
               - Use the value of the variable button-hover-background for the background
       - In [data-section-theme="dark"], add the variable button-color pointing to the variable color-white
*/

/* Custom properties */
:root {
    --button-display: inline-block; /* Button display type */
    --button-padding: 1.5rem 3rem; /* Button padding */
    --button-border: 0.2rem solid var(--color-primary); /* Button border style */
    --button-color: var(--color-black); /* Button text color */
    --button-text-decoration: none; /* Button text decoration */
    --button-font-size: var(--font-size-large); /* Button font size */
    --button-hover-color: var(--color-white); /* Button hover text color */
    --button-hover-text-decoration: none; /* Button hover text decoration */
    --button-hover-background: var(--color-primary); /* Button hover background color */
}

/* Additional custom styles */
.button {
  /* Button class selector */
  display: var(--button-display); /* Set display type */
  padding: var(--button-padding); /* Set padding */
  border: var(--button-border); /* Set border style */
  font-size: var(--button-font-size); /* Set font size */
  color: var(--button-color); /* Set text color */
  text-decoration: var(--button-text-decoration); /* Set text decoration */
}

.button:hover {
  /* Button hover state */
  color: var(--button-hover-color); /* Set hover text color */
  text-decoration: var(--button-hover-text-decoration); /* Set hover text decoration */
  background-color: var(--button-hover-background); /* Set hover background color */
}

/* Dark theme customization */
[data-section-theme="dark"] {
  --button-color: var(--color-white); /* Set button text color to white in dark theme */
}


/* 
    Filename: 26-style.css
    Purpose:
        - Add the card-testimonial selector:
            - Center align the text
        - Target the card-avatar that is inside the card-testimonial:
            - Round the radius on all sides at 50%
            - Set the width to 10x the root element
            - Set the height to 10x the root element
        - Target the <cite> HTML tag which is inside card-quote inside the card-testimonial:
            - Style as a block level element
            - Pad the top with 1x the root element
            - Set the foreground color value to the value of the color-primary variable
        - Does not have to pass w3c
*/

.card-testimonial {
    text-align: center;
}

.card-testimonial .card-avatar {
    border-radius: 50%;
    width: 10rem;
    height: 10rem;
}

.card-testimonial .card-quote cite {
    display: block;
    padding-top: 1rem;
    color: var(--color-primary);
}


/* 
    Filename: 27-style.css
    Purpose:
        - Add the section-hero selector:
            - Set the size of the background using 2-value syntax
                - Width should be 90rem and the height should be set automatic
        - Target the section-title inside the section-hero:
            - Add 5rem of margin to the bottom
        - Target the section-inner inside the section-hero:
            - Add 10rem, 40rem, 2rem, and 0 to the padding on the top, right, bottom, left all in 1 rule
        - Does not have to pass w3c
*/

.section-hero {
    background-size: 90rem auto;
}

.section-hero .section-title {
    margin-bottom: 5rem;
}

.section-hero .section-inner {
    padding: 10rem 40rem 2rem 0;
}


/* 
    Filename: 28-style.css
    Purpose:
        - Create these custom properties:
            - Name: header-padding, Value: 4rem 0 0
            - Name: header-logo-position, Value: relative
            - Name: header-logo-link-display, Value: inline-block
            - Name: header-logo-link-position, Value: absolute
            - Name: header-logo-link-top, Value: -1rem
            - Name: header-logo-link-left, Value: 0
        - Create a header class selector:
            - Pad the header with the value within the variable header-padding
        - Create a header-logo class selector:
            - Position the header-logo with the value of the variable header-logo-position
            - Target the link inside the header-logo class:
                - Render the display using the value of the variable header-logo-link-display
                - Position the links with the value of the variable header-logo-link-position
                - Set the vertical position of the element using header-logo-link-top
                - Set the horizontal position of the element using header-logo-link-left
        - Does not have to pass w3c
*/

:root {
    --header-padding: 4rem 0 0;
    --header-logo-position: relative;
    --header-logo-link-display: inline-block;
    --header-logo-link-position: absolute;
    --header-logo-link-top: -1rem;
    --header-logo-link-left: 0;
}

.header {
    padding: var(--header-padding);
}

.header-logo {
    position: var(--header-logo-position);
}

.header-logo a {
    display: var(--header-logo-link-display);
    position: var(--header-logo-link-position);
    top: var(--header-logo-link-top);
    left: var(--header-logo-link-left);
}


/* 
    Filename: 29-style.css
    Purpose:
        - Edit the nav-item-link-hover property by setting its value to the color-white variable
        - Target the before pseudo elements of nav-link that is inside the nav:
            - Set the values of these elements to empty using content
            - Absolutely position the targeted elements
            - Set the vertical position to 0
            - The horizontal position of the targeted elements should be 0
            - Set the color of the background color of the targeted elements to the value             of color-white
            - The width of the targeted elements should be set to 0
            - Set the height to 20% of the root element value
        - Target the before pseudo elements of nav-link when nav-item is hover and is inside nav:
            - Set the background color of the elements to the variable color-primary
            - Set the width of the elements to 100%
        - Does not have to pass w3c
*/

.nav-item-link:hover {
    color: var(--color-white); /* Change the text color to white on hover */
}

.nav-link::before {
    content: ''; /* Empty content */
    position: absolute; /* Position the element absolutely */
    top: 0; /* Set vertical position to top */
    left: 0; /* Set horizontal position to left */
    background-color: var(--color-white); /* Set background color to white */
    width: 0; /* Initially set width to 0 */
    height: 20%; /* Set height to 20% of the root element value */
}

.nav-item:hover .nav-link::before {
    background-color: var(--color-primary); /* Change background color to color-primary */
    width: 100%; /* Set width to 100% on hover */
}
