/*
   Filename: 25-style.css 
   Purpose:
       Add custom properties to the root selector:
           - button-display: inline-block
           - button-padding: 1.5rem 3rem
           - button-border: 0.2rem solid var(--color-primary)
           - button-color: color-black
           - button-text-decoration: none
           - button-font-size: font-size-large
           - button-hover-color: color-white
           - button-hover-text-decoration: none
           - button-hover-background: color-primary
       Add these selectors after the selector for anchor links in active state:
           - Create the button class selector
               - Set display to the variable button-display
               - Add padding all around with the variable button-padding
               - Style the border with the variable button-border
               - Set font size to the variable button-font-size
               - Set foreground color to the variable button-color
               - Text decoration value to the variable button-text-decoration
           - Create the hover state of the button class selector
               - Set foreground color value to the variable button-hover-color
               - Text decoration value to the variable button-hover-text-decoration
               - Use the value of the variable button-hover-background for the background
       In [data-section-theme="dark"], add the variable button-color pointing to the variable color-white
*/

/* Custom properties */
:root {
    /* Define custom properties */
    --button-display: inline-block; /* Button display type */
    --button-padding: 1.5rem 3rem; /* Button padding */
    --button-border: 0.2rem solid var(--color-primary); /* Button border style */
    --button-color: var(--color-black); /* Button text color */
    --button-text-decoration: none; /* Button text decoration */
    --button-font-size: var(--font-size-large); /* Button font size */
    --button-hover-color: var(--color-white); /* Button hover text color */
    --button-hover-text-decoration: none; /* Button hover text decoration */
    --button-hover-background: var(--color-primary); /* Button hover background color */
}

/* Additional custom styles */
.button {
  /* Button class selector */
  display: var(--button-display); /* Set display type */
  padding: var(--button-padding); /* Set padding */
  border: var(--button-border); /* Set border style */
  font-size: var(--button-font-size); /* Set font size */
  color: var(--button-color); /* Set text color */
  text-decoration: var(--button-text-decoration); /* Set text decoration */
}

.button:hover {
  /* Button hover state */
  color: var(--button-hover-color); /* Set hover text color */
  text-decoration: var(--button-hover-text-decoration); /* Set hover text decoration */
  background-color: var(--button-hover-background); /* Set hover background color */
}

/* Dark theme customization */
[data-section-theme="dark"] {
  --button-color: var(--color-white); /* Set button text color to white in dark theme */
}


/* Reset CSS */

html {
    line-height: 1.15; /* 1 */
    -webkit-text-size-adjust: 100%; /* 2 */
  }
  
  /* Sections */
  
  body {
    margin: 0;
  }
  
  main {
    display: block;
  }
  
  h1 {
    font-size: 2em;
    margin: 0.67em 0;
  }
  
  /* Grouping content */
  
  hr {
    box-sizing: content-box; /* 1 */
    height: 0; /* 1 */
    overflow: visible; /* 2 */
  }
  
  pre {
    font-family: monospace, monospace; /* 1 */
    font-size: 1em; /* 2 */
  }
  
  /* Text-level semantics */
  
  a {
    background-color: transparent;
  }
  
  /* Forms */
  
  button,
  input,
  optgroup,
  select,
  textarea {
    font-family: inherit; /* 1 */
    font-size: 100%; /* 1 */
    line-height: 1.15; /* 1 */
    margin: 0; /* 2 */
  }
  
  button,
  input {
    overflow: visible; /* 1 */
  }
  
  button,
  select {
    text-transform: none; /* 1 */
  }
  
  button,
  [type="button"],
  [type="reset"],
  [type="submit"] {
    -webkit-appearance: button; /* 1 */
  }
  
  fieldset {
    padding: 0.35em 0.75em 0.625em;
  }
  
  legend {
    box-sizing: border-box; /* 1 */
    color: inherit; /* 2 */
    display: table; /* 1 */
    max-width: 100%; /* 1 */
    padding: 0; /* 3 */
    white-space: normal; /* 1 */
  }
  
  progress {
    vertical-align: baseline;
  }
  
  textarea {
    overflow: auto;
  }
  
  [type="checkbox"],
  [type="radio"] {
    box-sizing: border-box; /* 1 */
    padding: 0; /* 2 */
  }
  
  [type="number"]::-webkit-inner-spin-button,
  [type="number"]::-webkit-outer-spin-button {
    height: auto;
  }
  
  [type="search"] {
    -webkit-appearance: textfield; /* 1 */
    outline-offset: -2px; /* 2 */
  }
  
  [type="search"]::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  
  ::-webkit-file-upload-button {
    -webkit-appearance: button; /* 1 */
    font: inherit; /* 2 */
  }
  
  /* Interactive */
  
  details {
    display: block;
  }
  
  summary {
    display: list-item;
  }
  
  /* Misc */
  
  template {
    display: none;
  }
  
  [hidden] {
    display: none;
  }
  
  /*# sourceMappingURL=normalize.min.css.map */
  
  *,
  *:before,
  *:after {
    box-sizing: border-box;
  }
  
  html {
    scroll-behavior: smooth;
    font-size: 62.5%;
  }
  
  :root {
    --color-primary: #d73953;
    --color-black: #090909;
    --color-white: #ffffff;
    --color-light-grey: #f3f3f3;
    --color-dark-grey: #353535;
    --text-color: var(--color-black);
  
    --font-family-base: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
    --font-family-title: "Raleway", "Helvetica Neue", Helvetica, Arial, sans-serif;
  
    --font-size-small: 1.2rem;
    --font-size-medium: 1.6rem;
    --font-size-large: 1.8rem;
    --font-size-x-large: 2.3rem;
    --font-size-xx-large: 4.8rem;
  
    --font-weight-regular: 400;
    --font-weight-bold: 700;
  
    --line-height-small: 1.2;
    --line-height-base: 1.5;
    --line-height-big: 1.8;
  
    --section-header-align: center;
    --section-footer-align: center;
  
    --section-tagline-transform: uppercase;
  
    --section-title-margin: 0;
    --section-tagline-margin: 0;
    --section-title-color: var(--color-black);
  
    --section-padding: 5rem 0;
    --section-header-padding: 0 0 3rem;
    --section-body-padding: 0 0 3rem;
    --section-footer-padding: 3rem 0 0;
    --footer-padding: 5rem 0 1rem;
  
    --nav-item-font-family: var(--font-family-title);
    --nav-item-font-weight: var(--font-weight-bold);
    --nav-item-font-size: var(--font-size-medium);
    --nav-item-letter-spacing: 0.04rem;
    --nav-item-display: inline-block;
    --nav-item-margin: 0 0 3rem 0;
    --nav-item-link-hover: var(--color-primary);
  
    --button-display: inline-block;
    --button-padding: 1.5rem 3rem;
    --button-border: 0.2rem solid var(--color-primary);
    --button-color: var(--color-black);
    --button-text-decoration: none;
    --button-font-size: var(--font-size-large);
    --button-hover-color: var(--color-white);
    --button-hover-text-decoration: none;
    --button-hover-background: var(--color-primary);
  }
  
  body {
    color: var(--text-color);
    font-family: var(--font-family-base);
    font-size: var(--font-size-medium);
    font-weight: var(--font-weight-regular);
    line-height: var(--line-height-base);
  }
  
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: var(--font-family-title);
    font-weight: var(--font-weight-bold);
  }
  
  a:link {
    color: var(--text-color);
    text-decoration: none;
  }
  
  a:visited {
    font-style: italic;
  }
  
  a:hover {
    text-decoration: underline;
  }
  
  a:active {
    background-color: var(--color-light-grey);
  }
  
  .button {
    display: var(--button-display);
    padding: var(--button-padding);
    border: var(--button-border);
    font-size: var(--button-font-size);
    color: var(--button-color);
    text-decoration: var(--button-text-decoration);
  }
  
  .button:hover {
    color: var(--button-hover-color);
    text-decoration: var(--button-hover-text-decoration);
    background-color: var(--button-hover-background);
  }
  
  .visually-hidden {
    display: none;
  }
  
  .section {
    padding: var(--section-padding);
  }
  
  .section-header {
    text-align: var(--section-header-align);
    padding: var(--section-header-padding);
  }
  
  .section-body {
    padding: var(--section-body-padding);
  }
  
  .section-footer {
    padding: var(--section-footer-padding);
    text-align: var(--section-footer-align);
  }
  
  .section-title {
    font-family: var(--font-family-title);
    font-size: var(--font-size-xx-large);
    font-weight: var(--font-weight-bold);
    margin: var(--section-title-margin);
    color: var(--section-title-color);
  }
  
  .section-tagline {
    color: var(--color-primary);
    font-family: var(--font-family-title);
    text-transform: var(--section-tagline-transform);
    font-weight: var(--font-weight-bold);
  margin: var(--section-tagline-margin);
}

[data-section-theme="dark"] {
  --text-color: var(--color-white);
  --section-title-color: var(--color-white);
  background-color: var(--color-black);
  --button-color: var(--color-white);
}

.container {
  width: 960px;
  margin-left: auto;
  margin-right: auto;
}

.navbar-menu {
  float: right;
}

.nav {
  margin: 0;
  padding: 0;
  list-style-type: none;
  text-align: center;
}

.nav .nav-item {
  font-family: var(--nav-item-font-family);
  font-weight: var(--nav-item-font-weight);
  font-size: var(--nav-item-font-size);
  letter-spacing: var(--nav-item-letter-spacing);
  display: var(--nav-item-display);
  margin: var(--nav-item-margin);
}

.nav .nav-link {
  display: block;
  padding: 0.5rem 1rem;
}

.nav .nav-link:hover {
  color: var(--nav-item-link-hover);
}

.row::after {
  content: "";
  display: table;
  clear: both;
}

ul.row {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

[class*="col-"] {
  float: left;
  padding: 0.5rem;
}

.col-1-3 {
  width: 33.33%;
}

.col-1-2 {
  width: 50%;
}

.footer {
  padding: var(--footer-padding);
}

.footer-copyright {
  margin: 0;
  font-size: var(--font-size-small);
  color: var(--text-color);
}

.footer ul {
  text-align: right;
}

.footer-address {
  color: var(--text-color);
}

.social-link {
  display: block;
}

.social-link > svg {
  fill: var(--text-color);
}

.card-category {
  color: var(--color-primary);
}

.card-services .card-title {
  margin: 0;
}

.card-services a {
  display: block;
  padding: 2rem;
  background-color: var(--color-light-grey);
}

.card-services a:hover {
  color: var(--color-white);
  background-color: var(--color-primary);
  text-decoration: none;
}

/* Add custom properties to the root selector */
:root {
  --button-display: inline-block; /* Set the display property for buttons */
  --button-padding: 1.5rem 3rem; /* Set padding for buttons */
  --button-border: 0.2rem solid var(--color-primary); /* Set border for buttons */
  --button-color: var(--color-black); /* Set text color for buttons */
  --button-text-decoration: none; /* Remove text decoration for buttons */
  --button-font-size: var(--font-size-large); /* Set font size for buttons */
  --button-hover-color: var(--color-white); /* Set text color on hover for buttons */
  --button-hover-text-decoration: none; /* Remove text decoration on hover for buttons */
  --button-hover-background: var(--color-primary); /* Set background color on hover for buttons */
}

/* Add button styles */
.button {
  display: var(--button-display);
  padding: var(--button-padding);
  border: var(--button-border);
  font-size: var(--button-font-size);
  color: var(--button-color);
  text-decoration: var(--button-text-decoration);
}

/* Add hover styles for buttons */
.button:hover {
  color: var(--button-hover-color);
  text-decoration: var(--button-hover-text-decoration);
  background-color: var(--button-hover-background);
}

/* Add button styles for dark theme */
[data-section-theme="dark"] {
  --button-color: var(--color-white); /* Change text color for buttons in dark theme */
}
 

/* 
    Filename: 26-style.css
    Purpose:
        - Add the card-testimonial selector:
            - Center align the text
        - Target the card-avatar that is inside the card-testimonial:
            - Round the radius on all sides at 50%
            - Set the width to 10x the root element
            - Set the height to 10x the root element
        - Target the <cite> HTML tag which is inside card-quote inside the card-testimonial:
            - Style as a block level element
            - Pad the top with 1x the root element
            - Set the foreground color value to the value of the color-primary variable
        - Does not have to pass w3c
*/

.card-testimonial {
    text-align: center;
  }
  
  .card-testimonial .card-avatar {
    border-radius: 50%;
    width: 10rem;
    height: 10rem;
  }
  
  .card-testimonial .card-quote cite {
    display: block;
    padding-top: 1rem;
    color: var(--color-primary);
  }
  

/* 
    Filename: 27-style.css
    Purpose:
        - Add the section-hero selector:
            - Set the size of the background using 2-value syntax
                - Width should be 90rem and the height should be set automatic
        - Target the section-title inside the section-hero:
            - Add 5rem of margin to the bottom
        - Target the section-inner inside the section-hero:
            - Add 10rem, 40rem, 2rem, and 0 to the padding on the top, right, bottom, left all in 1 rule
        - Does not have to pass w3c
*/

.section-hero {
    background-size: 90rem auto;
  }
  
  .section-hero .section-title {
    margin-bottom: 5rem;
  }
  
  .section-hero .section-inner {
    padding: 10rem 40rem 2rem 0;
  }
  

/* 
    Filename: 28-style.css
    Purpose:
        - Create these custom properties:
            - Name: header-padding, Value: 4rem 0 0
            - Name: header-logo-position, Value: relative
            - Name: header-logo-link-display, Value: inline-block
            - Name: header-logo-link-position, Value: absolute
            - Name: header-logo-link-top, Value: -1rem
            - Name: header-logo-link-left, Value: 0
        - Create a header class selector:
            - Pad the header with the value within the variable header-padding
        - Create a header-logo class selector:
            - Position the header-logo with the value of the variable header-logo-position
            - Target the link inside the header-logo class:
                - Render the display using the value of the variable header-logo-link-display
                - Position the links with the value of the variable header-logo-link-position
                - Set the vertical position of the element using header-logo-link-top
                - Set the horizontal position of the element using header-logo-link-left
        - Does not have to pass w3c
*/

:root {
    --header-padding: 4rem 0 0;
    --header-logo-position: relative;
    --header-logo-link-display: inline-block;
    --header-logo-link-position: absolute;
    --header-logo-link-top: -1rem;
    --header-logo-link-left: 0;
  }
  
  .header {
    padding: var(--header-padding);
  }
  
  .header-logo {
    position: var(--header-logo-position);
  }
  
  .header-logo a {
    display: var(--header-logo-link-display);
    position: var(--header-logo-link-position);
    top: var(--header-logo-link-top);
    left: var(--header-logo-link-left);
  }
  

/* 
    Filename: 29-style.css
    Purpose:
        - Edit the nav-item-link-hover property by setting its value to the color-white variable
        - Target the before pseudo elements of nav-link that is inside the nav:
            - Set the values of these elements to empty using content
            - Absolutely position the targeted elements
            - Set the vertical position to 0
            - The horizontal position of the targeted elements should be 0
            - Set the color of the background color of the targeted elements to the value color-white
            - The width of the targeted elements should be set to 0
            - Set the height to 20% of the root element value
        - Target the before pseudo elements of nav-link when nav-item is hover and is inside nav:
            - Set the background color of the elements to the variable color-primary
            - Set the width of the elements to 100%
        - Does not have to pass w3c
*/

.nav-item-link:hover {
    color: var(--color-white); /* Change the text color to white on hover */
  }
  
  .nav-link::before {
    content: ''; /* Empty content */
    position: absolute; /* Position the element absolutely */
    top: 0; /* Set vertical position to top */
    left: 0; /* Set horizontal position to left */
    background-color: var(--color-white); /* Set background color to white */
    width: 0; /* Initially set width to 0 */
    height: 20%; /* Set height to 20% of the root element value */
  }
  
  .nav-item:hover .nav-link::before {
    background-color: var(--color-primary); /* Change background color to color-primary */
    width: 100%; /* Set width to 100% on hover */
  }
  